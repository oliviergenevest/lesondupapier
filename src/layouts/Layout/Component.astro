---
import { TagFragment } from '~/lib/datocms/commonFragments';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { graphql } from '~/lib/datocms/graphql';
import { DraftModeToggler } from '~/components/DraftModeToggler';
import { Seo, type TitleMetaLinkTag } from '@datocms/astro';
import { isDraftModeEnabled } from '~/lib/draftMode';
import Footer from '~/components/Footer/Footer.astro';
import { BaseLayout } from '../BaseLayout';
import { Navigation } from '~/components/Navigation';
import { Image } from 'astro:assets';
import logo_png from '../../img/logo_lesondupapier.png';
import logo_svg from '../../icons/lesondupapier-logo.svg';
import { Subheader } from '~/components/Subheader';
import Hamburger from '~/components/Hamburger.astro';
import { NavigationMobile } from '~/components/NavigationMobile';
import { Icon } from 'astro-icon/components';

type Props = {
  additionalSeo?: TitleMetaLinkTag[];
  backgroundColor: string;
};

const { additionalSeo = [], backgroundColor } = Astro.props;

const query = graphql(
  /* GraphQL */ `
    query RootQuery {
      _site {
        faviconMetaTags {
          ...TagFragment
        }
      }
    }
  `,
  [TagFragment],
);

const draftModeEnabled = isDraftModeEnabled(Astro.cookies);
const result = await executeQuery(query, { includeDrafts: draftModeEnabled });
---

<BaseLayout
  seo={[...result._site.faviconMetaTags, ...additionalSeo]}
  backgroundColor={backgroundColor}
>
  <Subheader />

  <div class="hidingHeader" id="hidingHeader">
    <div class="header hidingHeader-in">
      <a href="/" title="Page d'accueil"><Icon class="brandlogo" width="446px" name="lesondupapier-logo"/></a>
      <Navigation />
      <!--<Hamburger /> -->
    </div>
  </div>
  <NavigationMobile />

  <!-- <Navbar data={navbarData} />-->
  <div transition:animate="fade">
    <slot />
  </div>
  <DraftModeToggler />
  <Footer />
</BaseLayout>


<style>
  [data-icon="lesondupapier-logo"] {
    font-size: 12rem;
  /*  color: var(--brand-color);*/
}
  </style>
<script>
  import { hidingHeader } from 'hiding-header';

  window.addEventListener('load', (event) => {
    const container = document.querySelector('#hidingHeader') as HTMLElement;
    hidingHeader(container);
    document.querySelector('.hamburger')?.addEventListener('click', () => {
      document.querySelector('nav.mobile_nav')?.classList.toggle('expanded');
      document.querySelector('html')?.classList.toggle('menu_open');
    });
    document.querySelector('.overlay')?.addEventListener('click', () => {
      document.querySelector('nav.mobile_nav')?.classList.toggle('expanded');
      document.querySelector('html')?.classList.toggle('menu_open');
    });
    document.querySelector('.btn_close')?.addEventListener('click', () => {
      document.querySelector('body')?.classList.toggle('menu_open');
      document.querySelector('nav.mobile_nav')?.classList.toggle('expanded');
    });
  });
</script>
