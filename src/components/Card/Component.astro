---
//import { ImageBlock } from '../blocks/ImageBlock';
import { ResponsiveImage } from '../ResponsiveImage';
//import { type FragmentOf, readFragment } from '~/lib/datocms/graphql';
import { Title } from '../Title';
import {  Modal, ModalBody } from 'free-astro-components';

const { data } = Astro.props;
//console.log(data.image)

{
  /*

- les items "membre" ouvrent un popup tandis que les autres ("atelier" ou "spectacle") ouvrent une page dédiée.
- le path pour les liens est généré selon le __typename (atelier ou spectacle)
- les items "spectacle" ont une image et un subtitle spécifique pour les vignettes (cardImage, cardSubtitle)

*/
}
var path = '/';
path = data.__typename === 'SpectacleRecord' ? `/spectacle/${data.slug}` : path;
path = data.__typename === 'AtelierRecord' ? `/atelier/${data.slug}` : path;
const subtitle = data.__typename === 'MemberRecord' ? data.subtitle : data.cardSubtitle;

const image = data.image ? data.image.responsiveImage : data.cardImage.responsiveImage;

//console.log('badgeLabel', data.badgeLabel);
---

<div class="card">
  {data.__typename === 'MemberRecord' ? <a data-modal-trigger={data.slug} /> : <a href={path} />}
  {data.badgeLabel && <div class="card_badge">{data.badgeLabel}</div>}
  <div class="card_image">
    {
      data.filter ? (
        <ResponsiveImage data={data.image.filterResponsiveImage} />
      ) : (
        <ResponsiveImage data={image} />
      )
    }
  </div>
  <div class="content">
    <Title as="h2" class:list={['card_title', 'h2']}>{data.title}</Title>
    <div class="subtitle" set:html={subtitle} />

    {
      data.__typename === 'MemberRecord' && (
        <Modal id={data.slug} class="modal" size="4xl">
          {/* <ModalHeader>
             <div class="modal_image">
              {image && <ResponsiveImage data={data.image.responsiveImage} />}
            </div>
           
          </ModalHeader>  */}
          <ModalBody>
            <div class="modal_image">
              {image && <ResponsiveImage data={data.image.responsiveImage} />}
            </div>
            <div class="modal_column">
              <Title as="h2" class="h2 modal_title">
                {data.title}{' '}
              </Title>
              <div set:html={data.subtitle} class="modal_subtitle" />
              <div set:html={data.content} class="modal_content" />
            </div>
          </ModalBody>
          {/*   <ModalFooter>
            <Button label="Fermer" data-modal-close />
          </ModalFooter>
          */}
        </Modal>
      )
    }
  </div>
</div>

<style>
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding-bottom: 8px;
    overflow: hidden;
    border-radius: 4px;
    transition: transform 0.2s ease-in-out;
    &:hover {
      cursor: pointer;

      transform: scale(1.03);
      transition: transform 0.2s ease-in-out;
    }
  }

  .card_badge {
    background-color: var(--color-turquoise);
    color: var(--color-cream);
    position: absolute;
    display: inline;
    border-radius: 2px;
    top: 8px;
    left: 8px;
    z-index: 1;
    padding: 4px;
  }

  .card_image {
    transition: transform 0.1s ease-in-out;
    overflow: hidden;
    position: relative;
    flex-grow: 0;
    min-height: 110px;
    border-radius: 4px;
  }

  a {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .card_title {
    color: var(--color-black);
    padding: 0;
    margin: 0;
  }

  .subtitle :global(p) {
    color: var(--color-black);
    font-size: rfs(16px);
    font-weight: 400;
    line-height: normal;
  }
</style>

<style is:global>
  .modal {
    margin: 0 auto;
    top: 10px;
    margin-top: 10px;

    .modal_title {
      text-transform: uppercase;
      color: var(--color-turquoise);
    }
    .modal_subtitle p {
      font-weight: bold;
      color: var(--color-black);
      padding: 0;
      margin: 0;
    }
    .modal_content p {
      color: var(--color-black);
    }

    .modal_image {
      padding-bottom: 16px !important;

      /* max-width:100%;*/
      flex-shrink: 0;
      @media screen and (min-width: 768px) {
        position: sticky;
        top: 0;
        max-width: 40%;
      }
    }

    .modal_column {
    }
  }

  button.ac-modal-close {
    right: 30px !important;
    outline: none;
    &:hover {
      background-color: transparent !important;
    }
  }

  /* pour la modal de l'equipe todo: a afiiner */

  .ac-modal-body {
    display: flex;
    gap: 30px;
    flex-direction: row;
    @media screen and (max-width: 768px) {
      flex-direction: column;
      gap: 10px;
      padding-top: 0 !important;
    }
  }

  dialog {
    --ac-modal-width-4xl: 800px;

    --ac-modal-border-radius: 8px;
    --ac-modal-backdrop-filter: grayscale(50%);
    --ac-modal-background-color: var(--color-cream);
    --ac-spacing-4: 32px;
    --ac-spacing-6: 32px;
    --ac-font-sans: var(--font-sans);
  }
</style>
