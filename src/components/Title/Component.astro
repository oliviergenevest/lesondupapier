---
import type { HTMLTag, Polymorphic } from 'astro/types';

type Props<T extends HTMLTag = 'h1'> = Polymorphic<{
  as: T;
  anchor?: string;
}>;

const { as: Tag = 'h1' as any, anchor, children, ...props } = Astro.props;
---

<Tag {...props} class={props.class}>
  <slot />
  {anchor && <a data-anchor={anchor} id={anchor} />}
  {anchor && <a data-permalink href={`#${anchor}`} />}
</Tag>

<style is:global>
  .h1 {
    color: var(--color-white);
    font-family: var(--font-headline);
    font-weight: normal;
    font-size: rfs(28px);
    width: 100%;
    display: flex;
    align-items: center;
    padding: rfs(32px) 0;
    gap: rfs(16px);
    text-align: center;
    text-transform: uppercase;
    &::before,
    &::after {
      content: '';
      width: 100%;
      height: 1px;
      background-color: white;
      position: relative;
      display: block;
      flex: 1 0 20px;
    }
  }

  a {
    text-decoration: none;
  }

  .h1.homepage {
    &::before,
    &::after {
      display: none;
    }
    padding-bottom: rfs(16px);
  }

  .h2 {
    text-transform: uppercase;
    font-family: var(--font-headline);
    font-weight: normal;
    font-size: rfs(28px);
    color: var(--color-yellow);
    padding-bottom: 4px;
  }

  .with-lines {
    width: 100%;
    display: flex;
    align-items: center;
    padding: rfs(32px) 0;
    gap: rfs(16px);

    text-transform: uppercase;
    &::before,
    &::after {
      content: '';
      width: 100%;
      height: 1px;
      background-color: white;
      position: relative;
      display: block;
      flex: 1 0 20px;
    }
  }
</style>
